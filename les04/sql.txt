--показать базы данных в hive
show databases;

--показать таблицы
show tables;

--создать базу данных если ее нет
create database if not exists student41_45;

--зачем используем use?
--что бы все запросы выполнялись в конкретной базе данных без добавления имени бд при обращении к ней
use student41_45;
show tables;

drop table if exists student41_45.airport_codes;
drop table if exists student41_45.airport_codes_part;

--создать таблицу, использовать первую строку как шапку
create external table student41_45.airport_codes (
    ident string,
    type string,
    name string,
    elevation_ft string,
    continent string,
    iso_country string,
    iso_region string,
    municipality string,
    gps_code string,
    iata_code string,
    local_code string,
    coordinates  string
)
row format delimited fields terminated by ','
stored as TEXTFILE
location "/datasets/for_hive/airport-codes/"
tblproperties ("skip.header.line.count"="1")
;

--читаем таблицу и выводим 10 строк
select * from airport_codes limit 10; --почему пишем лимит?

--что делаем в этих запросах?
-- количество уникальных значений в колонке type
select count(distinct `type`) from airport_codes;
--вывод уникальных значений по колонке type
select distinct `type` from airport_codes;

--удалить таблицу если она есть
drop table if exists student41_45.airport_codes_part;
;
create table student41_45.airport_codes_part (
    ident string,
    iso_country string,
    `name` string,
    elevation_ft string,
    continent string,
    iso_region string,
    municipality string,
    gps_code string,
    iata_code string,
    local_code string,
    coordinates  string
)
partitioned by (`type` string)
stored as TEXTFILE
location '/user/student41_45/hive_test_loc'
;

insert overwrite table airport_codes_part
partition(`type`)
select
     ident, `name`, elevation_ft, continent
    ,iso_region, municipality, gps_code, iata_code, local_code
    ,coordinates, iso_country, `type`
from airport_codes
tablesample (1000 rows)
;
select count(distinct `type`) from airport_codes_part;
select distinct `type` from airport_codes_part;

/*
теперь посмотри в hive_test_loc через hdfs dfs -ls/-du и скажи, что заметил и почему там всё так

--мы в папке создали структуру из партиций в нашем случае по полю тайп, и вывели в них по 1000 строк
*/


--что такое temporary table и когда лучше использовать?
--это временные таблицы, которые удаляются после завершения сеанса. удобно использовать для построения связей и хранения промежуточных данных

--что будет с содержимым таблицы, если колонки, по которым партиционируем, будут стоять не последними в селекте?
create temporary table for_insert_airport_codes_part as
select
     ident, `name`, elevation_ft, continent
    ,iso_region, municipality, gps_code, iata_code, local_code
    ,coordinates, iso_country, `type`
from student41_45.airport_codes t1
left join (
    select distinct
        `type` as type_2
    from student41_45.airport_codes_part
    ) t2 on t1.`type` = t2.type_2
where
    t2.type_2 is null
;
select count(distinct `type`) from for_insert_airport_codes_part;
select distinct `type` from for_insert_airport_codes_part;
;


--чем insert overwrite отличается от insert into?
--insert overwrite перезаписывает таблицу
--инсерт инто просто дописывает данные в существующую таблицу
insert into student41_45.airport_codes_part partition(`type`)
select
     ident, `name`, elevation_ft, continent
    ,iso_region, municipality, gps_code, iata_code, local_code
    ,coordinates, iso_country, `type`
from for_insert_airport_codes_part t1
limit 1000
;

select count(distinct `type`) from airport_codes_part;
select distinct `type` from airport_codes_part;

/*
STREAMING
выполни в баше это и скажи, что мы тут делаем:
    seq 0 9 > col_1 && seq 10 19 > col_2
    paste -d'|' col_1 col_2 | hdfs dfs -appendToFile - test_tab/test_tab.csv
 вывели счет 0 -9 и 10-19 в 1 и 2 колонк с разделителем |  и отправили пайплайн в Hdfs в файл
[student41_45@bigdataanalytics2-head-shdpt-v31-1-0 ~]$ hdfs dfs -cat test_tab/test_tab.csv
0|10
1|11
2|12
3|13
4|14
5|15
6|16
7|17
8|18
9|19
0|10
1|11
2|12
3|13
4|14
5|15
6|16
7|17
8|18
9|19
*/
;
drop table if exists my_test_tab;
;

загрузили данные из прошлого шага(0-9\10-19)
create temporary external table my_test_tab (
    col_1 int,
    col_2 int
)
row format delimited fields terminated by '|'
stored as TEXTFILE
location "/user/student41_45/test_tab"
;
select * from my_test_tab;
;

;
--что тут произошло и как это можно использовать ещё?
операция сложения, мы сложили две колонки и вывели результирующую таблицу
select
    transform(col_1, col_2) using "awk '{print $1+$2}'" as my_sum
from my_test_tab
;

-- /home/student41_45/mapred/mapper.py